@using VnCompany.WebApp.Helpers
@using VnCompany.WebApp.Resources;
@using Newtonsoft.Json;
@*@model VnCompany.WebApp.Models.WorkFlowCreateOrUpdateViewModel*@
@model VnCompany.WebApp.Models.WorkFlowViewModel

@{
    ViewBag.Title = "WorkFlow";
}
@Html.Partial("_Notifications")

@Html.Partial("../Widgets/Modals/_LargeModal")

<div class="row">
    <div class="col-lg-12">
        <div class="m-portlet">
            <div class="m-portlet__head">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        <span class="m-portlet__head-icon m--hide">
                            <i class="la la-gear"></i>
                        </span>
                        <h3 class="m-portlet__head-text">
                            Thêm mới work flow
                        </h3>
                    </div>
                </div>
            </div>
            <!--begin::Form-->
            @using (Html.BeginForm("Create", "WorkFlow", FormMethod.Post, new { @class = "m-form m-form--fit", role = "form", id = "creWorkFlow" }))
            {
                @Html.Partial("Partials/_UpdateForm", Model)
            }
        </div>
    </div>
</div>

@section PageInlineScripts{
    <script src="~/Scripts/Form/search.js"></script>
    <script src="~/Scripts/Form/main.js"></script>
    <script src="~/Scripts/Form/update.js"></script>
    <script src="~/Content/Plugins/formio/formio.full.min.js"></script>

    <!-- inline scripts related to this page -->
    <script type="text/javascript">
        function moveUpForm(el) {
            let formId = el.id.replace("btnUp-", "");
            let index = FormControl.SelectedItems.findIndex(c => c.info.Id == formId);
            // Swap two element
            var obj1 = document.getElementById("block" + formId);
            var obj2 = document.getElementById("block" + FormControl.SelectedItems[index - 1].info.Id);
            // Swap two element
            FormControl.SwapArrayElements(FormControl.SelectedItems, index, index - 1);

            FormControl.SwapObj(obj1, obj2);
        }

        function moveDownForm(el) {
            let formId = el.id.replace("btnDown-", "");
            let index = FormControl.SelectedItems.findIndex(c => c.info.Id == formId);
            // Swap two element
            var obj1 = document.getElementById("block" + FormControl.SelectedItems[index + 1].info.Id);
            var obj2 = document.getElementById("block" + formId);
            // Swap two element
            FormControl.SwapArrayElements(FormControl.SelectedItems, index, index + 1);

            FormControl.SwapObj(obj1, obj2);
        }

        function deleteForm(element) {
            let formIdInWorkFlow = element.id.substring(element.id.indexOf("-") + 1);
            let idBlock = `block${formIdInWorkFlow}`;
            var f = document.getElementById(idBlock);
            f.remove();

            var index = FormControl.SelectedItems.findIndex(c => c.info.Id == formIdInWorkFlow);
            FormControl.SelectedItems.splice(index, 1);
        }

        $("#btnSave").click(function() {
            let formIdObj = [];
            let formIds = FormControl.SelectedItems.map(c => c.info.Id);
            for (let i = 0; i < formIds.length; i++) {
                let tempData = {
                    FormId: formIds[i],
                    SortOrder: i + 1
                }
                formIdObj.push(tempData);
            }
            $("#workFlowForm").val(JSON.stringify(formIdObj));
            $("#creWorkFlow").submit();
        });

        $(function() {
            let template = $("#template-form").val();
        });
    </script>
}