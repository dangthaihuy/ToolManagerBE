@using Manager.WebApp.Resources;
@using Newtonsoft.Json;
@model Manager.WebApp.Models.MenuServiceCreateOrUpdateViewModel

@{
    ViewBag.Title = "Menu Service";
}
@Html.Partial("_Notifications")

@Html.Partial("../Widgets/Modals/_DefaultModal")

<div class="row pl30 pr30">
    <div class="col-lg-12">
        <div class="m-portlet">
            <div class="m-portlet__head" style="height: 4rem;">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        @*<span class="m-portlet__head-icon m--hide">*@
                        <span class="m-portlet__head-icon">
                            <i class="la la-plus-circle"></i>
                        </span>
                        <h3 class="m-portlet__head-text" style="font-size: 20px;">
                            Thêm mới Menu Service
                        </h3>
                    </div>
                </div>
            </div>
            <!--begin::Form-->
            @using (Html.BeginForm("Create", "MenuService", FormMethod.Post, new { @class = "m-form m-form--fit", role = "form", id = "creMenuService" }))
            {
                @Html.Partial("Partials/_UpdateForm", Model)
            }
        </div>
    </div>
</div>

@section PageInlineScripts{
    <script src="~/Scripts/Workflow/search.js"></script>
    <script src="~/Scripts/Workflow/main.js"></script>
    <script src="~/Scripts/Workflow/update.js"></script>
    <script src="~/Content/Plugins/formio/formio.full.min.js"></script>
    <script type="text/javascript">

        function changeWorkflow(el) {
            let workflowId = el.id.replace("detail_", "");

            var workflow = WorkflowControl.SelectedItems.find(c => c.info.Id == workflowId);
            setTimeout(function() {
                WorkflowControl.ClearHtml();

                for (let i = 0; i < workflow.info.Forms.length; i++) {
                    WorkflowControl.GenerateHtmlWorkflowDetail(workflow.info.Forms[i], "formio_id")
                }
            }, 100);

            $(".m-wizard__step").each(function() {
                var ct = $(this);
                ct.removeClass("m-wizard__step--current")
            });
            $("#step_" + workflowId).addClass("m-wizard__step--current");
        }
        $("#btnSave").on("click", function() {
            debugger
            let workFlowIds = WorkflowControl.SelectedItems.map(c => c.info.Id);
            let arr = [];
            for (let i = 0; i < workFlowIds.length; i++) {
                let menuWorkflow = {
                    WorkFlowId : workFlowIds[i],
                    SortOrder : i
                }
                arr.push(menuWorkflow);
            }
            $("#workflows").val(JSON.stringify(arr));
            $("#creMenuService").submit();
        });
    </script>
}