@using VnCompany.WebApp.Resources;
@using Newtonsoft.Json;
@model VnCompany.WebApp.Models.FormCreateOrUpdateViewModel

@{
    ViewBag.Title = "Sensei";
}
@Html.Partial("_Notifications")

@Html.Partial("../Widgets/Modals/_DefaultModal")

<div class="row">
    <div class="col-lg-12">
        <div class="m-portlet">
            <div class="m-portlet__head">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        <span class="m-portlet__head-icon m--hide">
                            <i class="la la-gear"></i>
                        </span>
                        <h3 class="m-portlet__head-text">
                            Chỉnh sửa Form
                        </h3>
                    </div>
                </div>
            </div>
            <!--begin::Form-->
            @using (Html.BeginForm("Edit", "Form", FormMethod.Post, new { @class = "m-form m-form--fit", role = "form", id = "editForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.Partial("_Notifications")

                <div class="m-portlet__body">
                    <div class="form-group m-form__group row" style="display: flex;">
                        @Html.HiddenFor(m => m.Id, new { id = "formId" })
                        @Html.HiddenFor(m => m.Template, new { id = "template" })
                        <div class="col-lg-4">
                            @Html.LabelFor(m => m.Code, new { @class = "form-control-label" }) <span class="required-input">*</span>
                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control form-control-warning m-input" })
                            @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-4">
                            @Html.LabelFor(m => m.Name, new { @class = "form-control-label" }) <span class="required-input">*</span>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control form-control-warning m-input" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group m-form__group row">
                        <div class="col-lg-12">
                            @Html.LabelFor(m => m.ShortDescription, new { @class = "form-control-label" })
                            @Html.TextAreaFor(m => m.ShortDescription, new { @class = "form-control form-control-warning m-input", @rows = 5 })
                        </div>
                    </div>

                    <div id="builder"></div>
                </div>
                <div class="m-portlet__foot">
                    <div class="col-lg-12 col-md-12 col-sm-12 form-group pt-3 row">
                        <div class="col-lg-6">
                            <button id="btnSave" type="button" class="btn btn-info btn-sm">
                                <i class="fa fa-download"></i> @ManagerResource.LB_SAVE
                            </button>
                            <a class="btn btn-outline-info btn-back btn-sm" href="@Url.Action("Index", "Form")"><i class="fa fa-backward"></i> @ManagerResource.LB_GOBACK</a>
                        </div>
                        <div class="col-lg-6 m--align-right">
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="meo">

</div>
@section PageInlineStyles{
    <link rel="stylesheet" href="~/Content/Plugins/formio/formio.full.min.css">
}

    @section PageInlineScripts{
    <script src="~/Content/Plugins/formio/formio.full.min.js"></script>
    <script>

        Formio.createForm(document.getElementById('meo'), {
            components: [
                {
                    "label": "Columns",
                    "columns": [
                        {
                            "components": [
                                {
                                    "label": "First name",
                                    "type": "textfield",
                                    "input": true,
                                    "key": "textField",
                                    "tableView": true,
                                    "attribute": {
                                        "name" : "FirstName"
                                    }
                                }
                            ],
                            "width": 6,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 6
                        },
                        {
                            "components": [
                                {
                                    "label": "Last name",
                                    "type": "textfield",
                                    "input": true,
                                    "key": "textField1",
                                    "tableView": true
                                }
                            ],
                            "width": 6,
                            "offset": 0,
                            "push": 0,
                            "pull": 0,
                            "size": "md",
                            "currentWidth": 6
                        }
                    ],
                    "type": "columns",
                    "input": false,
                    "key": "columns",
                    "tableView": false
                }
            ],
        });


        var fieldsData = $(template).val();
        var fields = [];
        if (fieldsData) {
            var fields = JSON.parse(fieldsData);
        }
        var ignoreTabs = [
            {
                key: 'api',
                ignore: true,
            },
            {
                key: 'data',
                ignore: true,
            },
            {
                key: 'conditional',
                ignore: true,
            },
            {
                key: 'logic',
                ignore: true,
            },
            {
                key: 'layout',
                ignore: true,
            },
        ];
        Formio.builder(document.getElementById('builder'), { components: fields }, {
            builder: {
                basic: {
                    components: {
                        table: true
                    }
                },
                //advanced: false,
                //data: false,
                premium: false,
                layout: {
                    components: {
                        table: false
                    }
                }
            },
            editForm: {
                @*textfield: ignoreTabs,*@
                textarea: ignoreTabs,
                number: ignoreTabs,
                password: ignoreTabs,
                checkbox: ignoreTabs,
                selectboxes: ignoreTabs,
                select: ignoreTabs,
                radio: ignoreTabs,
                button: ignoreTabs,
                email: ignoreTabs,
                phoneNumber: ignoreTabs,
                address: ignoreTabs,
                datetime: ignoreTabs,
                day: ignoreTabs,
                time: ignoreTabs,
                currency: ignoreTabs,
            }
        }).then(function(builder) {
            $("#btnSave").on("click", function() {
                $("#template").val(JSON.stringify(builder.schema.components));
                $(editForm).submit();
            });
        });
    </script>
}
